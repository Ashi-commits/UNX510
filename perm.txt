# Assignment 2
# Course:                UNX510
# Family Name:           Sahu
# Given Name:            Ayushi
# Student Number:        143-789-188
# Login name:            asahu
# Professor:             Shahdad Shariatmadari
# Due Date:              July 19, 2021
#
# I declare that the attached assignment is my own work in accordance with
# Seneca Academic Policy.  No part of this assignment has been copied manually
# or electronically from any other source (including web sites) or distributed
# to other students.
##############################################################################

#!/bin/bash

#terminate the script with appropriate cleanup measures with an exit code 0 and capturing the SIGINT (CTRL-C) keyboard interrupt signal from user
trap "stty icanon icrnl echo; tput cup $(tput lines) 0; exit 0" SIGINT

#checking for the arguments are more than 1
if (( "$#" > 1 ))
then
	echo "Usage: pathdisplay [dir-name]"
	exit 1 
fi

#if argument is 1
if (( "$#" > 0 ))
then
	#storing the directory or directory path passed in the argument
	directory_list=$1
	#changin to specified directory
   	cd $directory_list
fi

#if directory doesn't exists
if [ ! -d $directory_list ]
then
	echo "$directory_list is not a valid directory name"
	exit 1
fi

absolutePathList(){

	#directory count
        level=0

        #array of directories
        declare -a path
        declare -a absolute_path
	
        #Loop through each level in the absolute path, starting at the root directory
        while :
        do
            # checking if the current directory is root
            if [ $(basename $(pwd)) == '/' ]
	    #if true then storing the path into the defined variables
            then
                path[$level]=$(basename $(pwd))
                absolute_path[$level]=$(pwd)
                path[$level]=$(ls -ld "${path[$level]}")
                break
            fi
		
            #else storing the directories at each level
            path[$level]=$(basename $(pwd))
            absolute_path[$level]=$(pwd)
	    #changing to the root directory to set the directory path
            cd ..
            path[$level]=$(ls -ld "${path[$level]}")	
            ((level++))
    
        done
        
        #print the directories in accordance of the user ouput using array
        while [ $level -ge 0 ]
        do
            if [ "$1" == '' ]
            then
                echo "${path[$level]}"
            elif [ "$1" -eq $(("${#absolute_path[$1]}"-$level)) ]
            then
                echo "${absolute_path[$level]}"
            fi
            ((level--))
        done
}

redrawScreen(){
    
    #setting the path in required format along with the directory name
    
    formatted_dir_list=$(absolutePathList | cut -d' ' -f 1,9,10 | sed 's/d//' | sed 's/\. //' | sed 's/rwx/r w x   /g' | sed 's/r--/r - -   /g'| sed 's/rw-/r w -   /g' | sed 's/r-x/r - x   /g' | sed 's/-w-/- w -   /g' | sed 's/-wx/- w x   /g' | sed 's/--x/- - x   /g' | sed 's/---/- - -   /g')

    		#displaying the column heading	
                echo -e "\nOwner \tGroup \tOther \tFilename\n----- \t----- \t----- \t--------"
                
                #prints each directory in the required format
                echo -e "$formatted_dir_list\n"
                
}

#calling the function to display the directories
redrawScreen

#cleaning and terminating the program
tput cup $(tput lines) 0
stty icanon icrnl echo
exit 0
