# Assignment 3
# Course:                UNX510
# Family Name:           Golan
# Given Name:            Omri
# Student Number:        101-160-166
# Login name:            ogolan1
# Professor:             Shahdad Shariatmadari
# Due Date:              August 7, 2020
#
# I declare that the attached assignment is my own work in accordance with
# Seneca Academic Policy.  No part of this assignment has been copied manually
# or electronically from any other source (including web sites) or distributed
# to other students.
##############################################################################

#!/bin/bash


input="$PWD" # set variable as current path in case no path is specified

if (( "$#" >= 2 ))
then
	echo "Usage: pathdisplay [dir-name]"
	exit 1 
fi

if (( "$#" > 0 ))
then
	input=$1
fi

if [ ! -d $input ]
then
	echo "$input is not a valid directory name"
	exit 1
fi

path=`readlink -f $input` # get the absolute path of the directory
textpath=`echo $path` # get the absolute path in string form

dirs=$(set -- $path; echo $#) # get number of directories (besides root)

i="2" #while loop prints entire textpath, add if statement to see if first in array, if so, then print without the $d

dirArray[$i]=`echo $textpath | cut -d"/" -f$[i]

dirName=${dirArray[$i]}

dirNameArray[$i]=$dirName


i=$[$i+1]

while (( $i <= $dirs )) # store each level by itself in an array spot
do
	dirArray[$i]=`echo $textpath |  cut -d"/" -f$[i]
	
	dirName=$dirName${dirArray[$i]}

	dirNameArray[$i]=$dirName

	i=$[$i+1]
done

# all done, now dirNameArray stores each directory in its absolute path in each of its array spots, next we must use it to loop through and display the permissions

#dirs=$((dirs + 1)) # add root(?) maybe?


	echo "Owner   Group   Other   Filename"
	echo "-----   -----   -----   --------"
	echo " "
	ls -ld / |  | cut -d' ' -f 1,9 --output-delimiter=' ' | sed 's/d//' | sed 's/\. //' | sed 's/rwx/r w x   /g' | sed 's/r--/r - -   /g'| sed 's/rw-/r w -   /g' | sed 's/r-x/r - x   /g' | sed 's/-w-/- w -   /g' | sed 's/-wx/- w x   /g' | sed 's/--x/- - x   /g' | sed 's/---/- - -   /g') # print only the permissions for the root folder
	echo " "

	dirName=""
	options=""

	x="2"
	while (( $x <= $dirs )) 
	do
		dir_links=$(textpath | sed -n "$dir_num p" | cut -d' ' -f2)
                        dir_owner=$(textpath | sed -n "$dir_num p" | cut -d' ' -f3)
                        dir_group=$(textpath | sed -n "$dir_num p" | cut -d' ' -f4)
                        dir_size=$(textpath | sed -n "$dir_num p" | cut -d' ' -f5)
                        dir_mod_date=$(textpath | sed -n "$dir_num p" | cut -d' ' -f 6,7,8 --output-delimiter=' ')
                        echo -en "  Links: "$dir_links"   Owner: "$dir_owner"  Group: "$dir_group"  Size: "$dir_size"  \nModified: "$dir_mod_date""
		if [ "$x" = "2" ]; then # if we're on the first non-root directory, echo that
			echo $dirName
		else # else, echo the next directories
			echo $dirName | cut -d'/' -f2 --output-delimiter=' '
		fi
		echo " "
		x=$[$x+1]
	done
